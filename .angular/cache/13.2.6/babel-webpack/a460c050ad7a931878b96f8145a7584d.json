{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(http) {\n      this.http = http;\n      this.item = {};\n      this.itemsFiltered = [];\n      this.items = [];\n      this.isLoading = false;\n      this.isLoading = true;\n      this.load();\n    }\n\n    load() {\n      this.http.get('https://crapp-18-default-rtdb.firebaseio.com/product_idx.json').subscribe(result => {\n        this.items = result;\n        this.isLoading = false;\n        console.log(this.items);\n      });\n    }\n\n    reload() {\n      const reloadObservable = new Observable(observer => {\n        this.http.get('https://crapp-18-default-rtdb.firebaseio.com/product_idx.json').subscribe(result => {\n          observer.next(result); //this.isLoading = false;\n\n          console.log(\"reload items\", this.items);\n        });\n      });\n      return reloadObservable;\n    }\n\n    getDetail(id) {\n      this.http.get('https://crapp-18-default-rtdb.firebaseio.com/product/' + id + '.json').subscribe(result => {\n        this.item = result;\n        this.isLoading = false;\n      });\n    }\n\n    filter(value) {\n      if (this.items.length < 1) {\n        this.isLoading = true;\n        const reload = this.reload();\n        reload.subscribe(items => {\n          this.items = items;\n          this.applyFilter(value);\n        });\n      } else {\n        this.applyFilter(value);\n      }\n    }\n\n    applyFilter(value) {\n      value = value.toLocaleUpperCase();\n      this.itemsFiltered = this.items.filter(product => {\n        var _a, _b, _c;\n\n        const category = (_a = product.category) === null || _a === void 0 ? void 0 : _a.toLocaleUpperCase();\n        const title = (_b = product.title) === null || _b === void 0 ? void 0 : _b.toLocaleUpperCase();\n        const code = (_c = product.code) === null || _c === void 0 ? void 0 : _c.toLocaleUpperCase();\n        return (category === null || category === void 0 ? void 0 : category.indexOf(value)) !== -1 || (title === null || title === void 0 ? void 0 : title.indexOf(value)) !== -1 || (code === null || code === void 0 ? void 0 : code.indexOf(value)) !== -1;\n      });\n    }\n\n  }\n\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}